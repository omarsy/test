/**
 * Synaps IndividualLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema } from '../schema';
import {
  IdentityDuplicate,
  identityDuplicateSchema,
} from './identityDuplicate';
import {
  IdentityFacematch,
  identityFacematchSchema,
} from './identityFacematch';
import { IdentityHistory, identityHistorySchema } from './identityHistory';
import {
  IdentityVerificationDocument,
  identityVerificationDocumentSchema,
} from './identityVerificationDocument';
import { State1Enum, state1EnumSchema } from './state1Enum';

export interface IdentityVerificationResponse {
  document?: IdentityVerificationDocument;
  duplicate?: IdentityDuplicate;
  facematch?: IdentityFacematch;
  history?: IdentityHistory[];
  /** Verification state */
  state?: State1Enum;
}

export const identityVerificationResponseSchema: Schema<IdentityVerificationResponse> = object(
  {
    document: [
      'document',
      optional(lazy(() => identityVerificationDocumentSchema)),
    ],
    duplicate: ['duplicate', optional(lazy(() => identityDuplicateSchema))],
    facematch: ['facematch', optional(lazy(() => identityFacematchSchema))],
    history: ['history', optional(array(lazy(() => identityHistorySchema)))],
    state: ['state', optional(state1EnumSchema)],
  }
);
