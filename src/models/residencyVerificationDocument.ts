/**
 * Synaps IndividualLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { boolean, lazy, object, optional, Schema } from '../schema';
import {
  ResidencyDocument,
  residencyDocumentSchema,
} from './residencyDocument';
import { ResidencyInfo, residencyInfoSchema } from './residencyInfo';
import { State1Enum, state1EnumSchema } from './state1Enum';

export interface ResidencyVerificationDocument {
  document?: ResidencyDocument;
  /** true if accomodation proof false if no accomodation proof */
  isAccomodation?: boolean;
  /** Verification state */
  state?: State1Enum;
  info?: ResidencyInfo;
}

export const residencyVerificationDocumentSchema: Schema<ResidencyVerificationDocument> = object(
  {
    document: ['document', optional(lazy(() => residencyDocumentSchema))],
    isAccomodation: ['is_accomodation', optional(boolean())],
    state: ['state', optional(state1EnumSchema)],
    info: ['info', optional(lazy(() => residencyInfoSchema))],
  }
);
